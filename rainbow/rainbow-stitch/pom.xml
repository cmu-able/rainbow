<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>rainbow</groupId>
	<artifactId>rainbow-stitch</artifactId>
	<packaging>jar</packaging>
	<version>3.1.0-SNAPSHOT</version>
	<name>Rainbow Stitch Language Parser</name>

	<properties>
		<project.build.sourceEncoding>utf-8</project.build.sourceEncoding>
		<rainbowVersion>3.1.0-SNAPSHOT</rainbowVersion>
	</properties>

	<!-- Software licences go here. -->
	<licenses>
		<!-- One block for each software license. -->
		<license>
			<!-- Description of the license. -->
			<comments>
				Not yet defined.
			</comments>
			<!-- How may the software be distributed? -->
			<distribution>manual</distribution>
			<!-- Name of the license. -->
			<name>Unknown</name>
		</license>
	</licenses>

	<!-- Organization which has owns the software. -->
	<organization>
		<!-- Organization name. -->
		<name>We</name>
		<!-- Organization URL. -->
		<url>http://www.we.com</url>
	</organization>

	<!-- List of application developers. -->
	<developers>
		<!-- One block per developer. -->
		<developer>
			<!-- Unique ID for the developer. This ID is referenced in the changelog. -->
			<id>schmerl</id>
			<!-- Developer name. -->
			<name>Bradley Schmerl</name>
			<!-- Developer e-mail address. -->
			<email>schmerl@cs.cmu.edu</email>
			<!-- Organization to which the developer belongs. -->
			<organization>CMU</organization>
			<!-- Developer time zone. -->
			<timezone>-5</timezone>
			<!-- Developer roles. -->
			<roles>
				<!-- Role name. -->
				<role />
			</roles>
		</developer>
		<developer>
			<id>pasc</id>
			<name>Paulo Casanova</name>
			<email>paulo.casanova@cs.cmu.edu</email>
			<organization>CMU</organization>
			<timezone>0</timezone>
			<roles>
				<role />
			</roles>
		</developer>
	</developers>

	<!-- Other people who have contributed to the project. Each 'contributor' 
		entry has the same format as the 'developer' tag above but no ID is required. -->
	<contributors>
		<!--<contributor> <name></name> <email></email> <organization></organization> 
			<roles> <role /> </roles> </contributor> -->
	</contributors>

	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
		- - - SOURCE CONTROL VERSION CONFIGURATION - - - - - - - - - - - - - - - 
		- - - - - - - - - - - - - - - - - - - - -->

	

	<build>
		<extensions>
			<!-- The wagon extension allows webdav access. This plugin is required 
				to deploy to the repository. -->
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-webdav</artifactId>
				<version>1.0-beta-2</version>
			</extension>
		</extensions>

		<!-- This is required to generate the site with maven 3. -->
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.2</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<!-- Compiler extensions (sets the source code as java 6 with ISO8859-1 
				encoding. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>iso8859-1</encoding>
				</configuration>
			</plugin>

			<!-- Configure the release plugin to set the place where tags should be 
				done. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<tagBase>
						http://svn.homenet/svn/projects/incubator/tags
					</tagBase>
				</configuration>
			</plugin>
			

			

			<!-- Configure the surefire plugin (which runs unit tests). We change 
				the default configuration in order not to stop the builds if unit tests fail. 
				We also add the project's base directory in the classpath. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19</version>
				<dependencies>
					<dependency>
						<groupId>org.junit.platform</groupId>
						<artifactId>junit-platform-surefire-provider</artifactId>
						<version>1.1.0</version>
					</dependency>
					<dependency>
						<groupId>org.junit.jupiter</groupId>
						<artifactId>junit-jupiter-engine</artifactId>
						<version>5.2.0</version>
					</dependency>
				</dependencies>
				<configuration>
					<argLine>-Djdk.net.URLClassPath.disableClassPathURLCheck=true</argLine>
					<testFailureIgnore>true</testFailureIgnore>
					<forkMode>always</forkMode>
					<resuseForks>false</resuseForks>
					<forkCount>1</forkCount>
					<additionalClasspathElements>
						<additionalClasspathElement>
							${basedir}
						</additionalClasspathElement>
						<additionalClasspathElement>
							${basedir}/src/test/java
						</additionalClasspathElement>
					</additionalClasspathElements>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.antlr</groupId>
				<artifactId>antlr4-maven-plugin</artifactId>
				<version>4.3</version>
				<configuration>
					<visitor>true</visitor>
					<listener>false</listener>
					<grammars>Stitch.g4</grammars>
					<outputDirectory>${project.build.directory}/generated-sources/antlr/org/sa/rainbow/stitch/parser</outputDirectory>
					<sourceDirectory>src/main/resources/antlr4/org/sa/rainbow/stitch/parser</sourceDirectory>
					<arguments>
						<argument>-package</argument>
						<argument>org.sa.rainbow.stitch.parser</argument>
					</arguments>
					<!-- <grammars>IM.g4</grammars> <outputDirectory>${project.build.directory}/generated-sources/antlr/org/sa/rainbow/im/parser</outputDirectory> 
						<sourceDirectory>src/main/antlr4/org/sa/rainbow/im/parser</sourceDirectory> -->
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>antlr4</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
		- - - JAR REPOSITORIES - - - - - - - - - - - - - - - - - - - - - - - - - 
		- - - - - - - - - - -->

	<repositories>
		<!-- We define a single repository which is accessible through web-dav. 
			The format (for webdav repositories) is dav:http://[<username>[:<password>]]@<host>[:<port>]/<path> -->
		<repository>
			<id>able.maven.repository</id>
			<url>
				dav:http://acme.able.cs.cmu.edu/maven-repository
			</url>
		</repository>
	</repositories>

	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
		- - - REPORTS - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
		- - - - - -->

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.6</version>
			</plugin>

			<!-- Plugin which generates the javadoc report. -->
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<docfilessubdirs>true</docfilessubdirs>
				</configuration>
			</plugin>

			<!-- Plugin which adds cross-referenced sources. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.3</version>
			</plugin>

			<!-- Plugin generating the surefire report. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.12.4</version>
			</plugin>

			<!-- Plugin which generates the test coverage report. -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.5.2</version>
			</plugin>

			<!-- Plugin generating the changelog. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changes-plugin</artifactId>
				<version>2.8</version>
			</plugin>

			<!-- Plugin with the todo report. -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<tags>
						<tag>TODO</tag>
						<tag>FIXME</tag>
						<tag>IDEA</tag>
						<tag>@todo</tag>
						<tag>@deprecated</tag>
					</tags>
				</configuration>
			</plugin>

			<!-- Plugin generating the PMD report ("bug" detector). -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>2.7.1</version>
				<configuration>
					<sourceEncoding>iso8859-1</sourceEncoding>
					<minimumTokens>100</minimumTokens>
					<targetJdk>1.6</targetJdk>
					<excludes>
						<exclude>**/*Bean.java</exclude>
						<exclude>**/generated/*.java</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- Plugin generating the findbugs report. -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>2.5.2</version>
			</plugin>

			<!-- Plugin for the checkstyle report. It assumes a checkstyle-config.xml 
				file exists in the root of the project. -->
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-checkstyle-plugin</artifactId> 
				<version>2.5</version> <configuration> <configLocation>checkstyle.xml</configLocation> 
				</configuration> </plugin> -->
		</plugins>
	</reporting>

	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
		- - - DEPLOYMENT CONFIGURATION - - - - - - - - - - - - - - - - - - - - - 
		- - - - - - - - - - - - - - -->

	<distributionManagement>
		<!-- Website location. Do not forget it should start with scp: and not 
			http. The user/password used for authentication should also be added. -->
		<!-- <site> <id>website</id> <url>scp://automatik:automatik@localhost:/home/pasc/mse/studio/mvnroot</url> 
			</site> -->

		<!-- Location of the repository where the jars should be added. It should 
			have the following format: dav:http://<user>:<pass>@<host>[:<port>]/<path> -->
		<repository>
			<id>able.maven.repository</id>
			<name>ABLE maven repository</name>
			<url>
				dav:http://acme.able.cs.cmu.edu/maven-repository
			</url>
		</repository>
	</distributionManagement>

	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
		- - - PROFILE CONFIGURATION - - - - - - - - - - - - - - - - - - - - - - - 
		- - - - - - - - - - - - -->

	<!-- - We define three profiles. One, the "dev-std" is the standard development 
		- profile (as the name indicates). This profile is the default one. - - The 
		full-test profile runs all "normal" tests plus the slow tests (the - tests 
		which end in "TestSlow"). - - The no-tests profile does not run any unit 
		tests. -->
	<profiles>
		<profile>
			<id>dev-std</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>

					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>full-test</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<argLine>-Djdk.net.URLClassPath.disableClassPathURLCheck=true</argLine>
							<includes>
								<include>**/*Test.java</include>
								<include>**/*TestCase.java</include>
								<include>**/*TestSlow.java</include>
							</includes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>no-tests</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<argLine>-Djdk.net.URLClassPath.disableClassPathURLCheck=true</argLine>
							<includes>
								<include>TestIgnore</include>
							</includes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<dependencies>

		<dependency>
			<groupId>rainbow</groupId>
			<artifactId>rainbow-core</artifactId>
			<version>${rainbowVersion}</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>27.0-jre</version>
		</dependency>
		<dependency>
			<groupId>rainbow</groupId>
			<artifactId>rainbow-acme-model</artifactId>
			<version>${rainbowVersion}</version>
		</dependency>
		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr4</artifactId>
			<version>4.3</version>
		</dependency>
		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr4-maven-plugin</artifactId>
			<version>4.3</version>
			<type>maven-plugin</type>
		</dependency>
		<dependency>
			<groupId>org.acmestudio</groupId>
			<artifactId>acme-lib</artifactId>
			<version>3.5.14</version>
		</dependency>
		<dependency>
			<groupId>rainbow</groupId>
			<artifactId>rainbow-gui</artifactId>
			<version>${rainbowVersion}</version>
		</dependency>
		<dependency>
			<groupId>com.fifesoft</groupId>
			<artifactId>rsyntaxtextarea</artifactId>
			<version>3.0.3</version>
		</dependency>
		
	</dependencies>
</project>
