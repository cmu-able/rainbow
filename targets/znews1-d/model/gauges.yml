#
# Gauge Type and Gauge Instance Specifications
#  - time periods generally in milliseconds
#
# History:
# - [SWC 2007.01.18] Created file, populated ZNews gauge descriptions.
# - [SWC 2007.04.09] Changed LatencyGaugeT to use RtLatencyMultiHostGauge.
# - [SWC 2007.04.10] Modified descriptions for different target locations.
# - [SWC 2007.04.11] Added ResponseTimeGaugeT
#
gauge-types:

  ResponseTimeGaugeT:
    commands:
      end2endRespTime : ClientT.setResponseTime (float)
    setupParams:
      targetIP:
        type:    String
        default: "localhost"
      beaconPeriod:
        type:    long
        default: 30000
      javaClass:
        type:    String
        default: "org.sa.rainbow.translator.znews.gauges.End2EndRespTimeGauge"
    configParams:
      samplingFrequency:
        type:    long
        default: 1000
      targetProbeType:
        type:    String
        default: ~
    comment: "ResponseTimeGaugeT measures and reports the end-to-end response time from a client or its proxy."

  ApacheTopGaugeT:
    commands:
      reqServiceRate     : ServerT.setReqServiceRate(float)
      byteServiceRate    : ServerT.setByteServiceRate(float)
      numReqsSuccess     : HttpConnT.setNumSuccessfulRequests(int)
      numReqsRedirect    : HttpConnT.setNumRedirectedRequests(int)
      numReqsClientError : HttpConnT.setNumRequestsClientError(int)
      numReqsServerError : HttpConnT.setNumRequestsServerError(int)
      pageHit : ServerT.setLastPageHit(String)
    setupParams:
      targetIP:
        type:    String
        default: "localhost"
      beaconPeriod:
        type:    long
        default: 20000
      javaClass:
        type:    String
        default: "org.sa.rainbow.translator.gauges.ApacheTopGauge"
    configParams:
      samplingFrequency:
        type:    long
        default: 1000
      targetProbeType:
        type:    String
        default: ~
    comment: "ApacheTopGaugeT measures and reports properties of an Apache server, via a UNIX top like utility"

  DiskIOGaugeT:
    commands:
      transferRate : ServerT.setDiskTransferRate(double)
      readRate     : ServerT.setDiskReadRate(double)
      writeRate    : ServerT.setDiskWriteRate(double)
    setupParams:
      targetIP:
        type:    String
        default: "localhost"
      beaconPeriod:
        type:    long
        default: 20000
      javaClass:
        type:    String
        default: "org.sa.rainbow.translator.gauges.DiskIOGauge"
    configParams:
      samplingFrequency:
        type:    long
        default: 1000
      targetProbeType:
        type:    String
        default: ~
    comment: "DiskIOGaugeT measures and reports disk IO stat of the target host, read/write reported in KBps"

  LoadGaugeT:
    commands:
      load : ServerT.setLoad(double)
    setupParams:
      targetIP:
        type:    String
        default: "localhost"
      beaconPeriod:
        type:    long
        default: 20000
      javaClass:
        type:    String
        default: "org.sa.rainbow.translator.gauges.CpuLoadGauge"
    configParams:
      samplingFrequency:
        type:    long
        default: 1000
      targetProbeType:
        type:    String
        default: ~
    comment: "LoadGaugeT measures and reports CPU load of the target host"

  FidelityGaugeT:
    commands:
      fidelity : ServerT.setFidelity(int)
    setupParams:
      targetIP:
        type:    String
        default: "localhost"
      beaconPeriod:
        type:    long
        default: 30000
      javaClass:
        type:    String
        default: "org.sa.rainbow.translator.gauges.FidelityGauge"
    configParams:
      samplingFrequency:
        type:    long
        default: 2500
      targetProbeType:
        type:    String
        default: ~
    comment: "FidelityGaugeT measures and reports the fidelity level of served content"

  LatencyGaugeT:
    commands:
      latency : HttpConnT.setLatency(double)
    setupParams:
      targetIP:
        type:    String
        default: "localhost"
      beaconPeriod:
        type:    long
        default: 20000
      javaClass:
        type:    String
        default: "org.sa.rainbow.translator.znews.gauges.RtLatencyMultiHostGauge"
    configParams:
      samplingFrequency:
        type:    long
        default: 1500
      targetProbeType:
        type:    String
        default: ~
    comment: "LatencyGaugeT measures and reports latency on a connection"

  LatencyRateGaugeT:
    commands:
      latencyRate : HttpConnT.setLatencyRate(double)
    setupParams:
      targetIP:
        type:    String
        default: "localhost"
      beaconPeriod:
        type:    long
        default: 20000
      javaClass:
        type:    String
        default: "org.sa.rainbow.translator.znews.gauges.RtLatencyRateMultiHostGauge"
    configParams:
      samplingFrequency:
        type:    long
        default: 1500
      targetProbeType:
        type:    String
        default: ~
    comment: "LatencyRateGaugeT measures and reports the latency rate of change on a connection"

gauge-instances:

  EERTG1:
    type:  ResponseTimeGaugeT
    model: "ZNewsSys:Acme"
    commands:
      "end2endRespTime(delegate.oracle)" : c0.setExperiencedResponseTime($<end2endRespTime>)
    setupValues:
      targetIP: "${customize.system.target.0}"
    configValues:
      samplingFrequency: 1000
      targetProbeType  : clientproxy
    comment: "EERTG1 is associated with the client component of the System, ZNewsSys, defined as an Acme model"

  ATG1:
    type:  ApacheTopGaugeT
    model: "ZNewsSys:Acme"
    mappings:
      reqServiceRate     : s0.setReqServiceRate($<reqServiceRate>)
      byteServiceRate    : s0.setByteServiceRate($<byteServiceRate>)
      numReqsSuccess     : conn0.setNumSuccessfulRequests($<numReqsSuccess>)
      numReqsRedirect    : conn0.setNumRedirectedRequests($<numReqsRedirect>)
      numReqsClientError : conn0.setNumRequestsClientError($<numReqsClientError>)
      numReqsServerError : conn0.setNumRequestsServerError($<numReqsServerError>)
      pageHit : s0.setLastPageHit($<pageHit>)
    setupValues:
      targetIP: "${customize.system.target.1}"
    configValues:
      samplingFrequency: ~
      # Leave details unspecified (null) to use default value defined at the type-level
      targetProbeType  : apachetop
    comment: "ATG1 is associated with component s0 and connector conn0 of the System, ZNewsSys, defined as an Acme model"

  DioG1:
    type:  DiskIOGaugeT
    model: "ZNewsSys:Acme"
    mappings:
      transferRate : s0.setDiskTransferRate($<trasnferRate>)
      readRate : s0.setDiskReadRate($<readRate>)
      writeRate : s0.setDiskWriteRate($<writeRate>)
    setupValues:
      targetIP: "${customize.system.target.1}"
    configValues:
      samplingFrequency: 1000
      targetProbeType  : diskio
    comment: "DioG1 is associated with the component s0 of the System, ZNewsSys, defined as an Acme model"

  LoG0:
    type:  LoadGaugeT
    model: "ZNewsSys:Acme"
    mappings:
      load : s0.setLoad($<load>)
    setupValues:
      targetIP: "${customize.system.target.0}"
    configValues:
      samplingFrequency: 1000
      targetProbeType  : load
    comment: "LoG0 is associated with the component s0 of the System, ZNewsSys, defined as an Acme model"

  LoG1:
    type:  LoadGaugeT
    model: "ZNewsSys:Acme"
    mappings:
      load : s1.setLoad($<load>)
    setupValues:
      targetIP: "${customize.system.target.1}"
    configValues:
      samplingFrequency: 1000
      targetProbeType  : load
    comment: "LoG1 is associated with the component s1 of the System, ZNewsSys, defined as an Acme model"

  FiG1:
    type:  FidelityGaugeT
    model: "ZNewsSys:Acme"
    mappings:
      fidelity : s0.setFidelity($<fidelity>)
    setupValues:
      targetIP: "${customize.system.target.1}"
    configValues:
      samplingFrequency: 2500
      targetProbeType  : fidelity
    comment: "FiG1 is associated with the component s0 of the System, ZNewsSys, defined as an Acme model"

  LatG1:
    type:  LatencyGaugeT
    model: "ZNewsSys:Acme"
    mappings:
      "latency(${rainbow.master.location.host})" : conn0.setLatency($<latency>)
      "latency(@{ZNewsSys.s1.deploymentLocation})" : conn1.setLatency($<latency$>)
    setupValues:
      targetIP: "${customize.system.target.1}"
    configValues:
      samplingFrequency: 1500
      targetProbeType  : pingrtt
    comment: "LatG1 is associated with the connectors of the System, ZNewsSys, defined as an Acme model"

  LatRoCG1:
    type:  LatencyRateGaugeT
    model: "ZNewsSys:Acme"
    mappings:
      "latencyRate(${rainbow.master.location.host})" : conn0.setLatencyRate($<latencyRate>)
      "latencyRate(@{ZNewsSys.s1.deploymentLocation})" : conn1.setLatencyRate($<latencyRate>)
    setupValues:
      targetIP: "${customize.system.target.1}"
    configValues:
      samplingFrequency: 1500
      targetProbeType  : pingrtt
    comment: "LatRoCG1 is associated with the connectors of the System, ZNewsSys, defined as an Acme model"

unused-gauge-instances:

  ATG0:
    type:  ApacheTopGaugeT
    model: "ZNewsSys:Acme"
    mappings:
      reqServiceRate     : s0.reqServiceRate
      byteServiceRate    : s0.byteServiceRate
      numReqsSuccess     : conn0.numReqsSuccess
      numReqsRedirect    : conn0.numReqsRedirect
      numReqsClientError : conn0.numReqsClientError
      numReqsServerError : conn0.numReqsServerError
      pageHit : s0.lastPageHit
    setupValues:
      targetIP: "${customize.system.target.0}"
    configValues:
      samplingFrequency: ~
      # Leave details unspecified (null) to use default value defined at the type-level
      targetProbeType  : apachetop
    comment: "ATG1 is associated with component s0 and connector conn0 of the System, ZNewsSys, defined as an Acme model"

  LoG3:
    type:  LoadGaugeT
    model: "ZNewsSys:Acme"
    mappings:
      load : s3.load
    setupValues:
      targetIP: "${customize.system.target.3}"
    configValues:
      samplingFrequency: 1000
      targetProbeType  : load
    comment: "LoG3 is associated with the component s3 of the System, ZNewsSys, defined as an Acme model"

